name: Scaffold a new service

on:
  workflow_dispatch:
    inputs:
      service_name:
        required: true
        description: The name of the new service
        type: string
      description:
        required: false
        description: Description of the service
        type: string
      port_context:
        required: true
        description: Includes the action's run id
        type: string

jobs:
  scaffold-service:
    runs-on: ubuntu-latest
    env:
      ORG_NAME: <Your ORG name>
      PORT_RUN_ID: ${{ fromJson(inputs.port_context).runId }}

    steps:
      - uses: actions/checkout@v4

      - name: Create a log message
        uses: port-labs/port-github-action@v1
        with:
          clientId: ${{ secrets.PORT_CLIENT_ID }}
          clientSecret: ${{ secrets.PORT_CLIENT_SECRET }}
          baseUrl: https://api.getport.io
          operation: PATCH_RUN
          runId: ${{ env.PORT_RUN_ID }}
          logMessage: "Starting scaffolding of service and repository: ${{ inputs.service_name }}"

      - name: Create GitHub Repository
        uses: port-labs/cookiecutter-gha@v1.1.1
        with:
          portClientId: ${{ secrets.PORT_CLIENT_ID }}
          portClientSecret: ${{ secrets.PORT_CLIENT_SECRET }}
          token: ${{ secrets.ORG_ADMIN_TOKEN }}
          portRunId: ${{ fromJson(inputs.port_context).runId }}
          repositoryName: ${{ inputs.service_name }}
          portUserInputs: '{"cookiecutter_app_name": "${{ inputs.service_name }}" }'
          cookiecutterTemplate: https://github.com/lacion/cookiecutter-golang
          blueprintIdentifier: "githubRepository"
          organizationName: ${{ env.ORG_NAME }}
          createPortEntity: false


      - name: Create Service in Port with Repository Relation
        uses: port-labs/port-github-action@v1
        with:
          clientId: ${{ secrets.PORT_CLIENT_ID }}
          clientSecret: ${{ secrets.PORT_CLIENT_SECRET }}
          baseUrl: https://api.getport.io
          operation: UPSERT
          identifier: "${{ inputs.service_name }}_service"
          title: "${{ inputs.service_name }} Service"
          blueprint: "service"
          relations: |
            {
              "repository": "${{ env.ORG_NAME }}/${{ inputs.service_name }}"
            }

      - name: Create a log message
        uses: port-labs/port-github-action@v1
        with:
          clientId: ${{ secrets.PORT_CLIENT_ID }}
          clientSecret: ${{ secrets.PORT_CLIENT_SECRET }}
          baseUrl: https://api.getport.io
          operation: PATCH_RUN
          runId: ${{ env.PORT_RUN_ID }}
          logMessage: "Finished scaffolding of service and repository: ${{ inputs.service_name }}"
